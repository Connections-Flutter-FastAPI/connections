name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: connections
          POSTGRES_PASSWORD: change_me
          POSTGRES_DB: connections
        options: >-
          --health-cmd "pg_isready -U connections -d connections"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: connections
      DB_PASSWORD: change_me
      DB_NAME: connections
      DB_HOST: localhost
      DB_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Initialize database schema
        working-directory: backend
        # inject the password so psql can authenticate non‑interactively
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          # wait until Postgres is accepting connections
          until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; do
            echo "Waiting for Postgres…"
            sleep 1
          done

          # run your SQL scripts in order
          psql -h $DB_HOST -U $DB_USER -d $DB_NAME -f create_tables_and_keys.sql
          psql -h $DB_HOST -U $DB_USER -d $DB_NAME -f insert_mock_data.sql
          psql -h $DB_HOST -U $DB_USER -d $DB_NAME -f update_schema_for_frontend.sql

      - name: Launch backend and smoke‑test
        working-directory: backend
        run: |
          source .venv/bin/activate
          # run in background so the job can proceed
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 &

          # give it a moment to start
          sleep 5

          # simple health check
          curl --fail http://localhost:8000/docs

  frontend:
    needs: backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Install frontend dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Lint frontend
        working-directory: frontend
        run: pnpm lint

      - name: Test frontend
        working-directory: frontend
        run: pnpm test

      - name: Build frontend
        working-directory: frontend
        run: pnpm build
